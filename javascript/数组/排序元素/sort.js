// 语法

// Array.sort(sortby)

// 参数

// sortby 可选 => 规定排序顺序。必须是函数。

// 说明

// 如果调用该方法时没有使用参数，将按字母顺序对数组中的元素进行排序，说得更精确点，是按照字符编码的顺序进行排序。要实现这一点，首先应把数组的元素都转换成字符串（如有必要），以便进行比较
// 如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。比较函数应该具有两个参数 a 和 b，其返回值如下：
// *    若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。
// *    若 a 等于 b，则返回 0。
// *    若 a 大于 b，则返回一个大于 0 的值。

// 示例

let a = new Array('M','G','A','Z','T');

a.sort();

console.log(a);             // ["A", "G", "M", "T", "Z"]

let b = new Array(1,10,15,5,9,101,1020);

b.sort();

console.log(b);             // [1, 10, 101, 1020, 15, 5, 9]

b.sort((a, b)=>{
    return a - b // 正序
    // return b - a // 倒序
})

console.log(b);             // [1, 5, 9, 10, 15, 101, 1020]